{"version":3,"sources":["scripts/main.js"],"names":["selected","prevCellText","body","document","querySelector","flag","pushNotification","posTop","posRight","title","description","type","innerHTML","notification","style","boxSizing","top","right","setTimeout","remove","addEventListener","e","targClick","target","table","tableBody","tBodies","rowsList","Array","from","children","columnIndex","srcElement","cellIndex","sortStringCol","list","getString","el","innerText","sort","a","b","localeCompare","sortNumberCol","getNumber","textElement","replace","textContent","append","tagName","row","parentElement","classList","input","createElement","value","setAttribute","focus","forEach","eventName","key","inputResult","charAt","toUpperCase","slice","columnName","tHead","firstElementChild","path","setText","text","length","officeList","officeArr","push","includes","Intl","NumberFormat","currency","minimumFractionDigits","format","preventDefault","currentTable","data","FormData","employeeData","Object","fromEntries","entries","newTableRow","cell","inputValue","salary","reset"],"mappings":"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","file":"main.8ce7bbbb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nlet flag = true;\nlet selected;\nlet prevCellText;\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const element = document.querySelector('body');\n\n  element.innerHTML += `\n    <div data-qa=\"notification\" class=\"notification ${type}\">\n      <h2 class=\"title\">\n        ${title}\n      </h2>\n      <p>\n        ${description}\n      </p>\n    </div>\n  `;\n\n  const notification = document.querySelector(`.${type}`);\n\n  notification.style.boxSizing = 'content-box';\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  setTimeout(() => {\n    document.querySelector(`.${type}`).remove();\n  }, 3000, type);\n};\n\nbody.innerHTML += `\n<form class=\"new-employee-form\" id=\"employee\">\n  <label>Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\" minlength=\"4\" required>\n  </label>\n  <label>Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n  </label>\n  <label>Office:\n    <select data-qa=\"office\" name=\"office\" required form=\"employee\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age:\n    <input name=\"age\" type=\"number\" data-qa=\"age\" min=\"18\" max=\"90\" required>\n  </label>\n  <label>Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n  </label>\n  <button>Save to table</button>\n</form>\n`;\n\ndocument.addEventListener('click', function(e) {\n  const targClick = e.target;\n  const table = document.querySelector('table');\n  const tableBody = document.querySelector('table').tBodies;\n  const rowsList = Array.from(table.children[1].children);\n  const columnIndex = e.srcElement.cellIndex;\n\n  function sortStringCol(list) {\n    const getString = (el) => {\n      return el.children[columnIndex].innerText;\n    };\n\n    if (flag) {\n      flag = false;\n\n      return list.sort((a, b) => {\n        return getString(a).localeCompare(getString(b));\n      });\n    }\n\n    if (!flag) {\n      flag = true;\n\n      return list.sort((a, b) => {\n        return getString(b).localeCompare(getString(a));\n      });\n    }\n  };\n\n  function sortNumberCol(list) {\n    const getNumber = (el) => {\n      const textElement = el.children[columnIndex].innerText;\n\n      return textElement.replace('$', '').replace(',', '');\n    };\n\n    if (flag) {\n      flag = false;\n\n      return list.sort((a, b) => getNumber(a) - getNumber(b));\n    }\n\n    if (!flag) {\n      flag = true;\n\n      return list.sort((a, b) => getNumber(b) - getNumber(a));\n    }\n  };\n\n  switch (targClick.textContent) {\n    case 'Name':\n      tableBody[0].append(...sortStringCol(rowsList));\n      break;\n\n    case 'Position':\n      tableBody[0].append(...sortStringCol(rowsList));\n      break;\n\n    case 'Office':\n      tableBody[0].append(...sortStringCol(rowsList));\n      break;\n\n    case 'Age':\n      tableBody[0].append(...sortNumberCol(rowsList));\n      break;\n\n    case 'Salary':\n      tableBody[0].append(...sortNumberCol(rowsList));\n      break;\n  };\n});\n\ndocument.addEventListener('click', function(e) {\n  if (e.target.tagName === 'TD') {\n    const row = e.target.parentElement;\n\n    if (selected) {\n      selected.classList.remove('active');\n    }\n\n    row.classList += 'active';\n    selected = row;\n  } else {\n    selected.classList.remove('active');\n  }\n});\n\ndocument.addEventListener('dblclick', function(e) {\n  if (e.target.tagName === 'TD') {\n    const input = document.createElement('input');\n\n    prevCellText = e.target.innerText;\n    input.value = prevCellText;\n    input.classList = 'cell-input';\n    e.target.innerText = '';\n    input.setAttribute('type', 'text');\n    e.target.append(input);\n    e.target.children[0].focus();\n  }\n});\n\n['focusout', 'keypress'].forEach(eventName =>\n  document.addEventListener(eventName, function(e) {\n    const description = 'Information was added successfully';\n\n    if (e.key === 'Enter' || e.type === 'focusout') {\n      const inputResult = e.target.value.charAt(0).toUpperCase()\n      + e.target.value.slice(1);\n      const columnName = document.querySelector('table')\n        .tHead.firstElementChild.children[e.path[1].cellIndex].innerText;\n      const setText = (text) => {\n        e.target.parentElement.innerText = text;\n      };\n\n      if (!inputResult) {\n        setText(prevCellText);\n\n        return;\n      }\n\n      switch (columnName) {\n        case 'Name' :\n          if (inputResult.length > 4) {\n            setText(inputResult);\n            pushNotification(10, 10, 'Success', description, 'success');\n          } else {\n            setText(prevCellText);\n            pushNotification(10, 10, 'Error', 'Short text!', 'error');\n          };\n          break;\n\n        case 'Position' :\n          if (inputResult.length > 1) {\n            setText(inputResult);\n            pushNotification(10, 10, 'Success', description, 'success');\n          } else {\n            setText(prevCellText);\n            pushNotification(10, 10, 'Error', 'Short text!', 'error');\n          };\n          break;\n\n        case 'Office' :\n          const officeList = document.querySelector('[name=\"office\"]').children;\n          const officeArr = [];\n\n          for (const key of officeList) {\n            officeArr.push(key.innerText);\n          }\n\n          if (officeArr.includes(inputResult)) {\n            setText(inputResult);\n            pushNotification(10, 10, 'Success', description, 'success');\n          } else {\n            setText(prevCellText);\n            pushNotification(10, 10, 'Error', 'Wrong office name!', 'error');\n          };\n          break;\n\n        case 'Age' :\n          if (inputResult >= 18 && inputResult <= 90) {\n            setText(inputResult);\n            pushNotification(10, 10, 'Success', description, 'success');\n          } else {\n            setText(prevCellText);\n            pushNotification(10, 10, 'Error', 'Wrong age!', 'error');\n          };\n          break;\n\n        case 'Salary' :\n          if (inputResult >= 1) {\n            const salary = new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD',\n              minimumFractionDigits: 0,\n            }).format(inputResult);\n\n            setText(salary);\n            pushNotification(10, 10, 'Success', description, 'success');\n          } else {\n            setText(prevCellText);\n            pushNotification(10, 10, 'Error', 'Wrong sum!', 'error');\n          };\n      }\n\n      const row = document.querySelector('.active');\n\n      row.classList.remove('active');\n      e.target.remove();\n    }\n  })\n);\n\ndocument.addEventListener('submit', function(e) {\n  e.preventDefault();\n\n  const currentTable = document.querySelector('table').children[1];\n  const data = new FormData(document.querySelector('.new-employee-form'));\n  const employeeData = Object.fromEntries(data.entries());\n  const newTableRow = document.createElement('tr');\n\n  for (const key in employeeData) {\n    const cell = document.createElement('td');\n    const inputValue = employeeData[key];\n\n    cell.innerText = inputValue.charAt(0).toUpperCase() + inputValue.slice(1);\n\n    if (key === 'salary') {\n      const salary = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n      }).format(inputValue);\n\n      cell.innerText = salary;\n    }\n    newTableRow.append(cell);\n  }\n\n  currentTable.append(newTableRow);\n  document.querySelector('.new-employee-form').reset();\n});\n"]}